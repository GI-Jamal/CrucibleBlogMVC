@model CrucibleBlogMVC.Models.Category

@using CrucibleBlogMVC.Services.Interfaces
@using CrucibleBlogMVC.Enums

@inject IImageService _ImageService

@{
    ViewData["Title"] = "Create";
}

<div class="container mt-5">
    <h1>Create</h1>

    <h4>Category</h4>
    <hr />
    <div class="row">
        <div class="col-md-8">
            <form asp-action="Create" enctype="multipart/form-data" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <img class="img-fluid border rounded-3 mb-2" style="max-height: 350px;" src="@_ImageService.ConvertByteArrayToFileAsync(Model.ImageData!,Model.ImageType!,(int)DefaultImage.CategoryImage)" id="blogImage">
                    <input asp-for="ImageFile" type="file" class="form-control mt-3 pt-2" accept=".png,.jpg,.jpeg,.gif"
                           onchange="document.getElementById('blogImage').src = window.URL.createObjectURL(this.files[0])" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
